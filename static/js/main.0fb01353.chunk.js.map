{"version":3,"sources":["assets/logo.png","data/questions.csv","data/mcq_questions.csv","data/mockexam1.csv","pages/PaymentPage.js","components/Header.js","components/Footer.js","pages/HomePage.js","pages/AboutUs.js","pages/Products.js","pages/RevisionMode.js","pages/PracticeMode.js","pages/ExamMode.js","pages/ContactUs.js","pages/MyProfile.js","services/api.js","pages/LoginPage.js","pages/SignupPage.js","pages/SubscriptionsPage.js","App.js","index.js"],"names":["module","exports","PaymentPage","paymentDetails","setPaymentDetails","useState","cardNumber","expiryDate","cvv","name","totalAmount","setTotalAmount","paymentType","setPaymentType","location","useLocation","navigate","useNavigate","useEffect","amount","type","state","handleInputChange","e","value","target","prevDetails","React","createElement","className","onSubmit","preventDefault","console","log","setTimeout","alert","htmlFor","id","onChange","required","maxLength","placeholder","Header","Link","to","src","logo","alt","Footer","href","rel","HomePage","AboutUs","Products","description","features","map","mode","key","feature","index","RevisionMode","allQuestions","setAllQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","isAnswerRevealed","setIsAnswerRevealed","userProgress","setUserProgress","numQuestions","setNumQuestions","filterType","setFilterType","sessionScore","setSessionScore","correct","total","isSessionActive","setIsSessionActive","progressStats","setProgressStats","incorrect","unseen","fetch","questionsCSV","then","response","text","csvString","result","Papa","parse","header","data","catch","error","savedProgress","localStorage","getItem","JSON","updateProgressStats","useCallback","stats","forEach","q","Question","startRevision","filtered","filter","_userProgress$q$Quest","_userProgress$q$Quest2","sort","Math","random","slice","handleAnswer","_userProgress$current","currentQuestion","newProgress","seen","attempts","setItem","stringify","newScore","length","endSession","finalScore","arguments","undefined","percentageCorrect","toFixed","max","parseInt","min","onClick","Answer","handleSubmit","handleBack","disabled","handleNext","PracticeMode","filteredQuestions","setFilteredQuestions","setCurrentQuestion","selectedAnswer","setSelectedAnswer","cumulativeScore","setCumulativeScore","filterCriteria","setFilterCriteria","seenStatus","answerStatus","availableModules","setAvailableModules","modules","Set","Module","uniqueCorrectAnswers","Object","values","progress","questionId","size","handleFilterChange","applyFilters","_userProgress$q$Quest3","_userProgress$q$Quest4","option","Explanation","isCorrect","handlePrevQuestion","prevIndex","handleNextQuestion","ExamMode","mockExams","setMockExams","selectedExam","setSelectedExam","userAnswers","setUserAnswers","flaggedQuestions","setFlaggedQuestions","sideNotes","setSideNotes","examDuration","timeRemaining","setTimeRemaining","isExamActive","setIsExamActive","isExamCompleted","setIsExamCompleted","examResults","setExamResults","selectedResultQuestion","setSelectedResultQuestion","mockExamsList","questions","timer","setInterval","prevTime","clearInterval","endExam","startExam","results","question","userAnswer","correctAnswer","explanation","flagged","sideNote","score","r","totalQuestions","detailedResults","examId","exam","find","handleSelectExam","Number","timeInSeconds","hours","floor","minutes","seconds","toString","padStart","formatTime","handleAnswerSelect","answer","prev","handleFlagQuestion","handleSideNote","note","_","handleResultQuestionSelect","ContactUs","formData","setFormData","email","message","handleChange","MyProfile","user","setUser","studyStage","isEditing","setIsEditing","Fragment","handleLogout","api","axios","create","baseURL","headers","LoginPage","setEmail","password","setPassword","setError","isLoading","setIsLoading","async","post","login","token","err","SignupPage","Subscriptions","handleSubscribe","plan","duration","price","handleMockPurchase","count","App","Router","Routes","Route","path","element","SubscriptionsPage","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0fb01353.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.adb39db7.png\";","module.exports = __webpack_public_path__ + \"static/media/questions.94062118.csv\";","module.exports = __webpack_public_path__ + \"static/media/mcq_questions.ce2f8711.csv\";","module.exports = __webpack_public_path__ + \"static/media/mockexam1.ce2f8711.csv\";","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/PaymentPage.css';\n\nfunction PaymentPage() {\n  const [paymentDetails, setPaymentDetails] = useState({\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    name: ''\n  });\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [paymentType, setPaymentType] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Get payment details from the location state\n    // This assumes you're passing data when redirecting to this page\n    const { amount, type } = location.state || {};\n    if (amount && type) {\n      setTotalAmount(amount);\n      setPaymentType(type);\n    } else {\n      // Redirect back if no payment details are provided\n      navigate('/subscriptions');\n    }\n  }, [location, navigate]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setPaymentDetails(prevDetails => ({\n      ...prevDetails,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you would typically integrate with a payment gateway\n    // For this example, we'll just log the details and show a success message\n    console.log('Payment submitted:', paymentDetails);\n    console.log('Amount:', totalAmount);\n    console.log('Type:', paymentType);\n    \n    // Simulate payment processing\n    setTimeout(() => {\n      alert('Payment successful!');\n      navigate('/dashboard'); // Redirect to dashboard or confirmation page\n    }, 1500);\n  };\n\n  return (\n    <div className=\"payment-page\">\n      <h1>Payment Details</h1>\n      <p>Total Amount: £{totalAmount}</p>\n      <p>Payment for: {paymentType}</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Cardholder Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={paymentDetails.name}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"cardNumber\">Card Number</label>\n          <input\n            type=\"text\"\n            id=\"cardNumber\"\n            name=\"cardNumber\"\n            value={paymentDetails.cardNumber}\n            onChange={handleInputChange}\n            required\n            maxLength=\"16\"\n          />\n        </div>\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"expiryDate\">Expiry Date</label>\n            <input\n              type=\"text\"\n              id=\"expiryDate\"\n              name=\"expiryDate\"\n              value={paymentDetails.expiryDate}\n              onChange={handleInputChange}\n              required\n              placeholder=\"MM/YY\"\n              maxLength=\"5\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"cvv\">CVV</label>\n            <input\n              type=\"text\"\n              id=\"cvv\"\n              name=\"cvv\"\n              value={paymentDetails.cvv}\n              onChange={handleInputChange}\n              required\n              maxLength=\"3\"\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"payment-button\">Make Payment</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PaymentPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.png';\n\nfunction Header() {\n  return (\n    <header>\n      <nav>\n        <div className=\"logo\">\n          <Link to=\"/\" id=\"logo-link\">\n            <img src={logo} alt=\"SQE-Easy Logo\" />\n          </Link>\n        </div>\n        <ul className=\"main-nav\">\n          <li><Link to=\"/\" id=\"nav-home\">Home</Link></li>\n          <li><Link to=\"/about\" id=\"nav-about\">About Us</Link></li>\n          <li><Link to=\"/products\" id=\"nav-modes\">Products</Link></li>\n          <li><Link to=\"/subscriptions\" id=\"nav-subscriptions\">Subscriptions</Link></li>\n          <li><Link to=\"/contact\" id=\"nav-contact\">Contact Us</Link></li>\n          <li><Link to=\"/profile\" id=\"nav-profile\">My profile</Link></li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"footer-content\">\n        <div className=\"footer-section\">\n          <h3>Quick Links</h3>\n          <ul>\n            <li><Link to=\"/\" id=\"footer-home\">Home</Link></li>\n            <li><Link to=\"/about\" id=\"footer-about\">About Us</Link></li>\n            <li><Link to=\"/products\" id=\"footer-modes\">Study Modes</Link></li>\n            <li><Link to=\"/subscriptions\" id=\"footer-subscriptions\">Subscriptions</Link></li>\n          </ul>\n        </div>\n        <div className=\"footer-section\">\n          <h3>Contact</h3>\n          <p>Email: <a href=\"mailto:info@sqe-easy.com\" id=\"footer-email\">info@sqe-easy.com</a></p>\n          <p>Phone: <a href=\"tel:+441234567890\" id=\"footer-phone\">+44 123 456 7890</a></p>\n        </div>\n        <div className=\"footer-section\">\n          <h3>Follow Us</h3>\n          <div className=\"social-icons\">\n            <a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-icon\" id=\"social-facebook\">Facebook</a>\n            <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-icon\" id=\"social-twitter\">Twitter</a>\n            <a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-icon\" id=\"social-linkedin\">LinkedIn</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-bottom\">\n        <p>&copy; 2024 SQE-Easy. All rights reserved.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction HomePage() {\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // Add login logic here (to be implemented)\n  };\n\n  return (\n    <main>\n      <section id=\"hero\">\n        <div className=\"hero-content\">\n          <div className=\"hero-text\">\n            <h1>Master the SQE with SQE-Easy</h1>\n            <p>Your ultimate question bank for SQE preparation in the UK</p>\n          </div>\n          <div className=\"login-section\">\n            <form id=\"login-form\" onSubmit={handleLogin}>\n              <input type=\"email\" id=\"email\" placeholder=\"Email\" required />\n              <input type=\"password\" id=\"password\" placeholder=\"Password\" required />\n              <button type=\"submit\" id=\"login-button\" className=\"btn btn-primary\">Login</button>\n            </form>\n            <Link to=\"/forgot-password\" id=\"forgot-password\">Forgot password?</Link>\n            <Link to=\"/signup\" id=\"create-account\">Create account</Link>\n            <div className=\"social-login\">\n              <button id=\"google-login\" className=\"btn btn-social\">Google</button>\n              <button id=\"facebook-login\" className=\"btn btn-social\">Facebook</button>\n              <button id=\"apple-login\" className=\"btn btn-social\">Apple</button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section id=\"features\">\n        <h2>Why Choose SQE-Easy?</h2>\n        <div className=\"feature-grid\">\n          <div className=\"feature-card\">\n            <h3>Comprehensive Question Bank</h3>\n            <p>Access thousands of practice questions covering all SQE topics</p>\n          </div>\n          <div className=\"feature-card\">\n            <h3>Adaptive Learning</h3>\n            <p>Personalized study plans based on your performance</p>\n          </div>\n          <div className=\"feature-card\">\n            <h3>Mock Exams</h3>\n            <p>Simulate real exam conditions with our timed tests</p>\n          </div>\n          <div className=\"feature-card\">\n            <h3>Progress Tracking</h3>\n            <p>Monitor your improvement with detailed analytics</p>\n          </div>\n          <div className=\"feature-card\">\n            <h3>Mock Exams</h3>\n            <p>Simulate real exam conditions with our timed tests</p>\n          </div>\n          <div className=\"feature-card\">\n            <h3>Progress Tracking</h3>\n            <p>Monitor your improvement with detailed analytics</p>\n          </div>\n        </div>\n      </section>\n\n      <section id=\"cta\">\n        <h2>Ready to Excel in Your SQE Journey?</h2>\n        <p>Join thousands of successful candidates who have prepared with SQE-Easy</p>\n        <Link to=\"/signup\" className=\"btn btn-primary\" id=\"cta-sign-up\">Sign Up Now</Link>\n      </section>\n    </main>\n  );\n}\n\nexport default HomePage;","import React from 'react';\n\nfunction AboutUs() {\n  return (\n    <div className=\"about-us\">\n      <h1>About SQE-Easy</h1>\n      <section className=\"mission\">\n        <h2>Our Mission</h2>\n        <p>At SQE-Easy, we're committed to helping aspiring solicitors succeed in their SQE journey. Our platform provides comprehensive, user-friendly study materials designed to make your preparation as effective and efficient as possible.</p>\n      </section>\n      <section className=\"team\">\n        <h2>Our Team</h2>\n        <p>Our team consists of experienced legal professionals, education experts, and tech enthusiasts, all dedicated to revolutionizing SQE preparation.</p>\n        {/* You can add team member profiles here later */}\n      </section>\n      <section className=\"history\">\n        <h2>Our History</h2>\n        <p>Founded in [Year], SQE-Easy has grown from a small startup to a leading provider of SQE preparation materials, helping thousands of students achieve their goals.</p>\n      </section>\n    </div>\n  );\n}\n\nexport default AboutUs;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Products.css';\n\nfunction Products() {\n  const studyModes = [\n    {\n      id: 'revision',\n      name: 'Revision Mode',\n      description: 'Master your knowledge with our ANKI-style flashcard system.',\n      features: [\n        'ANKI-style flashcards for effective learning',\n        'Customizable number of questions per session',\n        'Filtering options: all, unseen, correct, or incorrect questions',\n        'Progress tracking across sessions'\n      ]\n    },\n    {\n      id: 'practice',\n      name: 'Practice Mode',\n      description: 'Hone your skills with our extensive question bank.',\n      features: [\n        'Comprehensive question bank covering all SQE topics',\n        'Detailed explanations for each answer',\n        'Performance analytics to track your progress',\n        'Customizable practice sessions'\n      ]\n    },\n    {\n      id: 'exam',\n      name: 'Exam Mode',\n      description: 'Simulate real exam conditions to prepare for the big day.',\n      features: [\n        'Timed tests mimicking the actual SQE exam format',\n        'Realistic exam environment simulation',\n        'Comprehensive performance report after each mock exam',\n        'Strategies and tips for exam day success'\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"products\">\n      <h1>Our Study Modes</h1>\n      \n      <div className=\"study-modes\">\n        {studyModes.map((mode) => (\n          <div key={mode.id} className=\"mode-card\">\n            <h2>{mode.name}</h2>\n            <p>{mode.description}</p>\n            <h3>Key Features:</h3>\n            <ul>\n              {mode.features.map((feature, index) => (\n                <li key={index}>{feature}</li>\n              ))}\n            </ul>\n            <Link to={`/${mode.id}`} className=\"btn btn-primary\">Start {mode.name}</Link>\n          </div>\n        ))}\n      </div>\n\n      <section className=\"additional-features\">\n        <h2>Additional Features</h2>\n        <ul>\n          <li>Adaptive learning technology</li>\n          <li>Mobile-friendly interface for studying on-the-go</li>\n          <li>Regular content updates to align with the latest SQE syllabus</li>\n        </ul>\n      </section>\n\n      {/* Placeholder for future additions */}\n      <section className=\"future-developments\">\n        <h2>Coming Soon</h2>\n        <p>We're constantly working on new features to enhance your study experience. Stay tuned for upcoming additions!</p>\n      </section>\n    </div>\n  );\n}\n\nexport default Products;","import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/RevisionMode.css';\nimport Papa from 'papaparse';\nimport questionsCSV from '../data/questions.csv';\n\nfunction RevisionMode() {\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isAnswerRevealed, setIsAnswerRevealed] = useState(false);\n  const [userProgress, setUserProgress] = useState({});\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [filterType, setFilterType] = useState('all');\n  const [sessionScore, setSessionScore] = useState({ correct: 0, total: 0 });\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  const [progressStats, setProgressStats] = useState({ correct: 0, incorrect: 0, unseen: 0 });\n\n  useEffect(() => {\n    fetch(questionsCSV)\n      .then(response => response.text())\n      .then(csvString => {\n        const result = Papa.parse(csvString, { header: true });\n        setAllQuestions(result.data);\n      })\n      .catch(error => console.error('Error loading questions:', error));\n\n    const savedProgress = localStorage.getItem('revisionProgress');\n    if (savedProgress) {\n      setUserProgress(JSON.parse(savedProgress));\n    }\n  }, []);\n\n  useEffect(() => {\n    updateProgressStats();\n  }, [userProgress, allQuestions]);\n\n  const updateProgressStats = useCallback(() => {\n    const stats = { correct: 0, incorrect: 0, unseen: 0 };\n    allQuestions.forEach(q => {\n      if (!userProgress[q.Question]) {\n        stats.unseen++;\n      } else if (userProgress[q.Question].correct) {\n        stats.correct++;\n      } else {\n        stats.incorrect++;\n      }\n    });\n    setProgressStats(stats);\n  }, [allQuestions, userProgress]);\n\n  const startRevision = useCallback(() => {\n    let filtered = [...allQuestions];\n    \n    if (filterType === 'unseen') {\n      filtered = filtered.filter(q => !userProgress[q.Question]);\n    } else if (filterType === 'incorrect') {\n      filtered = filtered.filter(q => userProgress[q.Question]?.correct === false);\n    } else if (filterType === 'correct') {\n      filtered = filtered.filter(q => userProgress[q.Question]?.correct === true);\n    }\n\n    filtered = filtered.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\n    setSelectedQuestions(filtered);\n    setCurrentQuestionIndex(0);\n    setIsAnswerRevealed(false);\n    setSessionScore({ correct: 0, total: 0 });\n    setIsSessionActive(true);\n  }, [allQuestions, userProgress, filterType, numQuestions]);\n\n  const handleSubmit = () => {\n    setIsAnswerRevealed(true);\n  };\n\n  const handleAnswer = (correct) => {\n    const currentQuestion = selectedQuestions[currentQuestionIndex];\n    const newProgress = { \n      ...userProgress, \n      [currentQuestion.Question]: { \n        seen: true,\n        correct: correct,\n        attempts: (userProgress[currentQuestion.Question]?.attempts || 0) + 1\n      } \n    };\n    setUserProgress(newProgress);\n    localStorage.setItem('revisionProgress', JSON.stringify(newProgress));\n\n    const newScore = {\n      correct: sessionScore.correct + (correct ? 1 : 0),\n      total: sessionScore.total + 1\n    };\n    setSessionScore(newScore);\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setIsAnswerRevealed(false);\n    } else {\n      endSession(newScore);\n    }\n  };\n\n  const endSession = (finalScore = sessionScore) => {\n    setIsSessionActive(false);\n    const percentageCorrect = (finalScore.correct / selectedQuestions.length) * 100;\n    alert(`Session completed!\\nScore: ${finalScore.correct}/${selectedQuestions.length}\\nPercentage: ${percentageCorrect.toFixed(2)}%`);\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setIsAnswerRevealed(false);\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n      setIsAnswerRevealed(false);\n    }\n  };\n\n  const currentQuestion = selectedQuestions[currentQuestionIndex];\n\n  return (\n    <div className=\"revision-mode\">\n      <h1>Revision Mode</h1>\n      {!isSessionActive && (\n        <div className=\"controls\">\n          <label htmlFor=\"num-questions\">\n            Number of questions:\n            <input \n              id=\"num-questions\"\n              type=\"number\" \n              value={numQuestions} \n              onChange={(e) => setNumQuestions(Math.max(1, parseInt(e.target.value) || 1))}\n              min=\"1\"\n            />\n          </label>\n          <select id=\"filter-type\" value={filterType} onChange={(e) => setFilterType(e.target.value)}>\n            <option value=\"all\">All Questions</option>\n            <option value=\"unseen\">Unseen Questions</option>\n            <option value=\"incorrect\">Incorrect Answers</option>\n            <option value=\"correct\">Correct Answers</option>\n          </select>\n          <button id=\"start-revision\" onClick={startRevision}>Start Revision</button>\n        </div>\n      )}\n      {isSessionActive && currentQuestion && (\n        <div className=\"question-card\">\n          <h2>Question:</h2>\n          <p>{currentQuestion.Question}</p>\n          {!isAnswerRevealed ? (\n            <button id=\"submit-answer\" onClick={handleSubmit}>Show Answer</button>\n          ) : (\n            <div className=\"answer-section\">\n              <h3>Answer:</h3>\n              <p>{currentQuestion.Answer}</p>\n              <button id=\"answer-correct\" onClick={() => handleAnswer(true)}>Correct</button>\n              <button id=\"answer-incorrect\" onClick={() => handleAnswer(false)}>Incorrect</button>\n            </div>\n          )}\n          <div className=\"navigation-buttons\">\n            <button id=\"nav-back\" onClick={handleBack} disabled={currentQuestionIndex === 0}>Back</button>\n            <button id=\"nav-next\" onClick={handleNext} disabled={currentQuestionIndex === selectedQuestions.length - 1}>Next</button>\n          </div>\n        </div>\n      )}\n      {isSessionActive && (\n        <div className=\"session-controls\">\n          <div className=\"progress\">\n            Question {currentQuestionIndex + 1} of {selectedQuestions.length}\n          </div>\n          <button id=\"end-session\" onClick={() => endSession()} className=\"end-session-btn\">End Session</button>\n        </div>\n      )}\n      <div className=\"overall-progress\">\n        <h3>Overall Progress</h3>\n        <p>Correct: {progressStats.correct}</p>\n        <p>Incorrect: {progressStats.incorrect}</p>\n        <p>Unseen: {progressStats.unseen}</p>\n        <p>Total Questions: {allQuestions.length}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default RevisionMode;","import React, { useState, useEffect } from 'react';\nimport '../styles/PracticeMode.css';\nimport Papa from 'papaparse';\nimport questionsCSV from '../data/mcq_questions.csv';\n\nfunction PracticeMode() {\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [isAnswerRevealed, setIsAnswerRevealed] = useState(false);\n  const [userProgress, setUserProgress] = useState({});\n  const [cumulativeScore, setCumulativeScore] = useState(0);\n  const [filterCriteria, setFilterCriteria] = useState({\n    module: '',\n    seenStatus: 'all',\n    answerStatus: 'all'\n  });\n  const [availableModules, setAvailableModules] = useState([]);\n\n  useEffect(() => {\n    fetch(questionsCSV)\n      .then(response => response.text())\n      .then(csvString => {\n        const result = Papa.parse(csvString, { header: true });\n        setAllQuestions(result.data);\n        setFilteredQuestions(result.data);\n        \n        const modules = [...new Set(result.data.map(q => q.Module))];\n        setAvailableModules(modules);\n      })\n      .catch(error => console.error('Error loading questions:', error));\n\n    const savedProgress = localStorage.getItem('practiceProgress');\n    if (savedProgress) {\n      setUserProgress(JSON.parse(savedProgress));\n    }\n  }, []);\n\n  useEffect(() => {\n    const uniqueCorrectAnswers = new Set(\n      Object.values(userProgress)\n        .filter(progress => progress.correct)\n        .map(progress => progress.questionId)\n    );\n    setCumulativeScore(uniqueCorrectAnswers.size);\n  }, [userProgress]);\n\n  useEffect(() => {\n    if (filteredQuestions.length > 0) {\n      setCurrentQuestion(filteredQuestions[currentQuestionIndex]);\n    }\n  }, [filteredQuestions, currentQuestionIndex]);\n\n  const handleAnswerSelect = (answer) => {\n    setSelectedAnswer(answer);\n  };\n\n  const handleSubmit = () => {\n    if (selectedAnswer && currentQuestion) {\n      const isCorrect = selectedAnswer === currentQuestion['Correct Answer'];\n      const newProgress = {\n        ...userProgress,\n        [currentQuestion.Question]: {\n          seen: true,\n          correct: isCorrect,\n          attempts: (userProgress[currentQuestion.Question]?.attempts || 0) + 1,\n          questionId: currentQuestion.Question\n        }\n      };\n      setUserProgress(newProgress);\n      localStorage.setItem('practiceProgress', JSON.stringify(newProgress));\n      setIsAnswerRevealed(true);\n    }\n  };\n\n  const handlePrevQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1);\n      setSelectedAnswer('');\n      setIsAnswerRevealed(false);\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < filteredQuestions.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setSelectedAnswer('');\n      setIsAnswerRevealed(false);\n    }\n  };\n\n  const applyFilters = () => {\n    let filtered = allQuestions;\n\n  \n    if (filterCriteria.module) {\n      filtered = filtered.filter(q => q.Module === filterCriteria.module);\n    }\n    if (filterCriteria.seenStatus !== 'all') {\n      filtered = filtered.filter(q => \n        filterCriteria.seenStatus === 'seen' ? userProgress[q.Question]?.seen : !userProgress[q.Question]?.seen\n      );\n    }\n    if (filterCriteria.answerStatus !== 'all') {\n      filtered = filtered.filter(q => \n        filterCriteria.answerStatus === 'correct' ? userProgress[q.Question]?.correct : userProgress[q.Question]?.correct === false\n      );\n    }\n\n    setFilteredQuestions(filtered);\n    setCurrentQuestionIndex(0);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilterCriteria({ ...filterCriteria, [e.target.name]: e.target.value });\n  };\n\n  if (!currentQuestion) return <div>Loading...</div>;\n\n  return (\n    <div className=\"practice-mode\">\n      <h1>Practice Mode</h1>\n      <div className=\"filters\">\n        <select id=\"module-filter\" name=\"module\" onChange={handleFilterChange}>\n          <option value=\"\">All Modules</option>\n          {availableModules.map(module => (\n            <option key={module} value={module}>{module}</option>\n          ))}\n        </select>\n        <select id=\"seen-status-filter\" name=\"seenStatus\" onChange={handleFilterChange}>\n          <option value=\"all\">All Questions</option>\n          <option value=\"seen\">Seen</option>\n          <option value=\"unseen\">Unseen</option>\n        </select>\n        <select id=\"answer-status-filter\" name=\"answerStatus\" onChange={handleFilterChange}>\n          <option value=\"all\">All Answers</option>\n          <option value=\"correct\">Correct</option>\n          <option value=\"incorrect\">Incorrect</option>\n        </select>\n        <button id=\"apply-filters\" onClick={applyFilters}>Apply Filters</button>\n      </div>\n      <div className=\"question-counter\">\n        Question {currentQuestionIndex + 1} of {filteredQuestions.length}\n      </div>\n      <div className=\"question-card\">\n        <h2>Question:</h2>\n        <p>{currentQuestion.Question}</p>\n        \n        <div className=\"answer-options\">\n  {['A', 'B', 'C', 'D', 'E'].map((option) => (\n    currentQuestion[`Option ${option}`] && (\n      <button\n        key={option}\n        id={`option-${option}`}\n        onClick={() => handleAnswerSelect(option)}\n        className={`answer-option \n          ${selectedAnswer === option ? 'selected' : ''} \n          ${isAnswerRevealed ? (option === currentQuestion['Correct Answer'] ? 'correct' : \n            (selectedAnswer === option ? 'incorrect' : '')) : ''}`}\n        disabled={isAnswerRevealed}\n      >\n        {currentQuestion[`Option ${option}`]}\n      </button>\n    )\n  ))}\n</div>\n\n        {!isAnswerRevealed ? (\n          <button id=\"submit-answer\" onClick={handleSubmit} disabled={!selectedAnswer}>Submit Answer</button>\n        ) : (\n          <div className=\"explanation\">\n            <h3>{selectedAnswer === currentQuestion['Correct Answer'] ? 'Correct!' : 'Incorrect'}</h3>\n            <p>The correct answer is: {currentQuestion['Correct Answer']}</p>\n            <h3>Explanation:</h3>\n            <p>{currentQuestion.Explanation}</p>\n          </div>\n        )}\n        <div className=\"navigation-buttons\">\n          <button id=\"prev-question\" onClick={handlePrevQuestion} disabled={currentQuestionIndex === 0}>Previous</button>\n          <button id=\"next-question\" onClick={handleNextQuestion} disabled={currentQuestionIndex === filteredQuestions.length - 1}>Next</button>\n        </div>\n      </div>\n      <div className=\"score\">\n        <p>Cumulative Score: {cumulativeScore} / {allQuestions.length}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default PracticeMode;","import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/ExamMode.css';\nimport Papa from 'papaparse';\nimport questionsCSV from '../data/mockexam1.csv';\n\nfunction ExamMode() {\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [mockExams, setMockExams] = useState([]);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [flaggedQuestions, setFlaggedQuestions] = useState({});\n  const [sideNotes, setSideNotes] = useState({});\n  const [examDuration] = useState(180); // 3 hours in minutes\n  const [timeRemaining, setTimeRemaining] = useState(examDuration * 60); // in seconds\n  const [isExamActive, setIsExamActive] = useState(false);\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\n  const [examResults, setExamResults] = useState(null);\n  const [selectedResultQuestion, setSelectedResultQuestion] = useState(null);\n\n  useEffect(() => {\n    fetch(questionsCSV)\n      .then(response => response.text())\n      .then(csvString => {\n        const result = Papa.parse(csvString, { header: true });\n        setAllQuestions(result.data);\n        const mockExamsList = [\n          { id: 1, name: \"Mock Exam 1\", questions: result.data.slice(0, 180) },\n          { id: 2, name: \"Mock Exam 2\", questions: result.data.slice(180, 360) },\n        ];\n        setMockExams(mockExamsList);\n      })\n      .catch(error => console.error('Error loading questions:', error));\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (isExamActive && timeRemaining > 0) {\n      timer = setInterval(() => {\n        setTimeRemaining(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(timer);\n            endExam();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isExamActive, timeRemaining]);\n\n  const startExam = useCallback(() => {\n    if (selectedExam) {\n      setIsExamActive(true);\n      setTimeRemaining(examDuration * 60);\n      setCurrentQuestionIndex(0);\n      setUserAnswers({});\n    }\n  }, [selectedExam, examDuration]);\n\n  const handleSelectExam = (examId) => {\n    const exam = mockExams.find(e => e.id === examId);\n    setSelectedExam(exam);\n  };\n\n  const handleAnswerSelect = (answer) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [currentQuestionIndex]: answer\n    }));\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < selectedExam.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleFlagQuestion = () => {\n    setFlaggedQuestions(prev => ({\n      ...prev,\n      [currentQuestionIndex]: !prev[currentQuestionIndex]\n    }));\n  };\n\n  const handleSideNote = (note) => {\n    setSideNotes(prev => ({\n      ...prev,\n      [currentQuestionIndex]: note\n    }));\n  };\n\n  const endExam = () => {\n    setIsExamActive(false);\n    setIsExamCompleted(true);\n    \n    const results = selectedExam.questions.map((question, index) => ({\n      question: question.Question,\n      userAnswer: userAnswers[index] || 'Not answered',\n      correctAnswer: question['Correct Answer'],\n      isCorrect: userAnswers[index] === question['Correct Answer'],\n      explanation: question.Explanation,\n      flagged: flaggedQuestions[index] || false,\n      sideNote: sideNotes[index] || ''\n    }));\n\n    const score = results.filter(r => r.isCorrect).length;\n    const percentageCorrect = (score / selectedExam.questions.length) * 100;\n\n    setExamResults({\n      score,\n      totalQuestions: selectedExam.questions.length,\n      percentageCorrect,\n      detailedResults: results\n    });\n  };\n\n  const handleResultQuestionSelect = (index) => {\n    setSelectedResultQuestion(index);\n  };\n\n  const formatTime = (timeInSeconds) => {\n    const hours = Math.floor(timeInSeconds / 3600);\n    const minutes = Math.floor((timeInSeconds % 3600) / 60);\n    const seconds = timeInSeconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const currentQuestion = selectedExam?.questions[currentQuestionIndex];\n\n  return (\n    <div className=\"exam-mode\">\n      <h1>Exam Mode</h1>\n      {!isExamActive && !isExamCompleted && (\n        <div className=\"exam-setup\">\n          <select onChange={(e) => handleSelectExam(Number(e.target.value))}>\n            <option value=\"\">Select a Mock Exam</option>\n            {mockExams.map(exam => (\n              <option key={exam.id} value={exam.id}>{exam.name}</option>\n            ))}\n          </select>\n          <button onClick={startExam} disabled={!selectedExam}>Start Exam</button>\n        </div>\n      )}\n      {isExamActive && currentQuestion && (\n        <div className=\"exam-area\">\n          <div className=\"left-panel\">\n            <div className=\"timer\">Time Remaining: {formatTime(timeRemaining)}</div>\n            <div className=\"question-card\">\n              <h2>Question {currentQuestionIndex + 1}:</h2>\n              <p>{currentQuestion.Question}</p>\n              <div className=\"answer-options\">\n                {['A', 'B', 'C', 'D', 'E'].map((option) => (\n                  currentQuestion[`Option ${option}`] && (\n                    <button\n                      key={option}\n                      onClick={() => handleAnswerSelect(option)}\n                      className={`answer-option ${userAnswers[currentQuestionIndex] === option ? 'selected' : ''}`}\n                    >\n                      {currentQuestion[`Option ${option}`]}\n                    </button>\n                  )\n                ))}\n              </div>\n              <button onClick={handleFlagQuestion} className=\"flag-btn\">\n                {flaggedQuestions[currentQuestionIndex] ? 'Unflag' : 'Flag'} Question\n              </button>\n              <textarea\n                placeholder=\"Add a side note...\"\n                value={sideNotes[currentQuestionIndex] || ''}\n                onChange={(e) => handleSideNote(e.target.value)}\n              />\n              <div className=\"navigation-buttons\">\n                <button onClick={handleBack} disabled={currentQuestionIndex === 0}>Back</button>\n                <button onClick={handleNext} disabled={currentQuestionIndex === selectedExam.questions.length - 1}>Next</button>\n              </div>\n              {currentQuestionIndex === selectedExam.questions.length - 1 && (\n                <button onClick={endExam} className=\"end-exam-btn\">End Exam</button>\n              )}\n            </div>\n          </div>\n          <div className=\"right-panel\">\n            <div className=\"question-grid\">\n              {selectedExam.questions.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentQuestionIndex(index)}\n                  className={`grid-item ${userAnswers[index] ? 'answered' : ''} ${flaggedQuestions[index] ? 'flagged' : ''}`}\n                >\n                  <span>{index + 1}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n      {isExamCompleted && examResults && (\n        <div className=\"exam-results\">\n          <h2>Exam Results</h2>\n          <p>Score: {examResults.score}/{examResults.totalQuestions}</p>\n          <p>Percentage: {examResults.percentageCorrect.toFixed(2)}%</p>\n          <div className=\"results-grid\">\n            {examResults.detailedResults.map((result, index) => (\n              <button\n                key={index}\n                onClick={() => handleResultQuestionSelect(index)}\n                className={`grid-item ${result.isCorrect ? 'correct' : 'incorrect'} ${result.flagged ? 'flagged' : ''}`}\n              >\n                <span>{index + 1}</span>\n              </button>\n            ))}\n          </div>\n          {selectedResultQuestion !== null && (\n            <div className=\"result-detail\">\n              <h3>Question {selectedResultQuestion + 1}</h3>\n              <p><strong>Question:</strong> {examResults.detailedResults[selectedResultQuestion].question}</p>\n              <p><strong>Your Answer:</strong> {examResults.detailedResults[selectedResultQuestion].userAnswer}</p>\n              <p><strong>Correct Answer:</strong> {examResults.detailedResults[selectedResultQuestion].correctAnswer}</p>\n              <p><strong>Explanation:</strong> {examResults.detailedResults[selectedResultQuestion].explanation}</p>\n              {examResults.detailedResults[selectedResultQuestion].sideNote && (\n                <p><strong>Your Note:</strong> {examResults.detailedResults[selectedResultQuestion].sideNote}</p>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ExamMode;","import React, { useState } from 'react';\n\nfunction ContactUs() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you would typically send the form data to your backend\n    console.log('Form submitted:', formData);\n    // Reset form after submission\n    setFormData({ name: '', email: '', message: '' });\n  };\n\n  return (\n    <div className=\"contact-us\">\n      <h1>Contact Us</h1>\n      <section className=\"contact-info\">\n        <h2>Get in Touch</h2>\n        <p>Email: info@sqe-easy.com</p>\n        <p>Phone: +44 123 456 7890</p>\n        <p>Address: 123 Legal Street, London, UK</p>\n      </section>\n      <section className=\"contact-form\">\n        <h2>Send Us a Message</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Message:</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n            ></textarea>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Send Message</button>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default ContactUs;","import React, { useState } from 'react';\n\nfunction MyProfile() {\n  const [user, setUser] = useState({\n    name: 'John Doe',\n    email: 'john@example.com',\n    studyStage: 'Preparing for SQE',\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you would typically send the updated user data to your backend\n    console.log('Profile updated:', user);\n    setIsEditing(false);\n  };\n\n  const handleLogout = () => {\n    // Implement logout logic here\n    console.log('User logged out');\n  };\n\n  return (\n    <div className=\"my-profile\">\n      <h1>My Profile</h1>\n      <section className=\"user-info\">\n        {isEditing ? (\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name:</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={user.name}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={user.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"studyStage\">Study Stage:</label>\n              <select\n                id=\"studyStage\"\n                name=\"studyStage\"\n                value={user.studyStage}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"Preparing for SQE\">Preparing for SQE</option>\n                <option value=\"Studying for FLK1\">Studying for FLK1</option>\n                <option value=\"Studying for FLK2\">Studying for FLK2</option>\n                <option value=\"Completed FLK1\">Completed FLK1</option>\n                <option value=\"Completed FLK2\">Completed FLK2</option>\n              </select>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Save Changes</button>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setIsEditing(false)}>Cancel</button>\n          </form>\n        ) : (\n          <>\n            <p><strong>Name:</strong> {user.name}</p>\n            <p><strong>Email:</strong> {user.email}</p>\n            <p><strong>Study Stage:</strong> {user.studyStage}</p>\n            <button onClick={() => setIsEditing(true)} className=\"btn btn-primary\">Edit Profile</button>\n          </>\n        )}\n      </section>\n      <section className=\"account-management\">\n        <h2>Account Management</h2>\n        <button onClick={handleLogout} className=\"btn btn-secondary\">Log Out</button>\n        {/* Add more account management options here */}\n      </section>\n      <section className=\"study-progress\">\n        <h2>Study Progress</h2>\n        {/* Add study progress information here */}\n        <p>This section will display the user's study progress and statistics.</p>\n      </section>\n    </div>\n  );\n}\n\nexport default MyProfile;","import axios from 'axios';\n\nconst API_URL = 'http://localhost:3002'; // Replace with your actual API URL\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/login', { email, password });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\nexport default api;","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { login } from '../services/api';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('userToken');\n    if (token) {\n      navigate('/');\n    }\n  }, [navigate]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      const data = await login(email, password);\n      // Store the token in localStorage\n      localStorage.setItem('userToken', data.token);\n      navigate('/');\n    } catch (err) {\n      setError(err.message || 'An error occurred during login');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      <section id=\"login-form\" className=\"section\">\n        <h1>Login to SQE-Easy</h1>\n        {error && <p className=\"error\">{error}</p>}\n        <form onSubmit={handleLogin}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required \n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input \n              type=\"password\" \n              id=\"password\" \n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required \n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={isLoading}>\n            {isLoading ? 'Logging in...' : 'Login'}\n          </button>\n        </form>\n        <p>Don't have an account? <Link to=\"/signup\">Register here</Link></p>\n      </section>\n    </main>\n  );\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SignupPage() {\n  const handleSignup = (e) => {\n    e.preventDefault();\n    // Add signup logic here (to be implemented)\n  };\n\n  return (\n    <main>\n      <section id=\"hero\" className=\"section\">\n        <div className=\"hero-content\">\n          <h1>Create Your SQE-Easy Account</h1>\n          <p>Start your journey to SQE success today</p>\n        </div>\n      </section>\n\n      <section id=\"signup-form\" className=\"section\">\n        <h2>Sign Up</h2>\n        <form onSubmit={handleSignup}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">First Name:</label>\n            <input type=\"text\" id=\"firstName\" required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\">Last Name:</label>\n            <input type=\"text\" id=\"lastName\" required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n            <input type=\"password\" id=\"confirmPassword\" required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"studyStage\">Current Study Stage:</label>\n            <select id=\"studyStage\" required>\n              <option value=\"\">Select your current stage</option>\n              <option value=\"preparing\">Preparing for SQE</option>\n              <option value=\"flk1\">Studying for FLK1</option>\n              <option value=\"flk2\">Studying for FLK2</option>\n              <option value=\"completedFlk1\">Completed FLK1</option>\n              <option value=\"completedFlk2\">Completed FLK2</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"checkbox\" id=\"termsAgreed\" required />\n            <label htmlFor=\"termsAgreed\">\n              I agree to the <Link to=\"/terms\">Terms and Conditions</Link> and <Link to=\"/privacy\">Privacy Policy</Link>\n            </label>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Create Account</button>\n        </form>\n        <p>Already have an account? <Link to=\"/login\">Log in here</Link></p>\n      </section>\n    </main>\n  );\n}\n\nexport default SignupPage;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Subscriptions.css';\n\n  function Subscriptions() {\n    const navigate = useNavigate();\n  \n    const handleSubscribe = (plan, duration, price) => {\n      navigate('/payment', { state: { amount: price, type: `${plan} ${duration} months subscription` } });\n    };\n  \n    const handleMockPurchase = (count, price) => {\n      navigate('/payment', { state: { amount: price, type: `${count} mock exams` } });\n  }\n  \n  return (\n    <div className=\"subscriptions-page\">\n      <h1>Subscription Plans</h1>\n      \n      <div className=\"plans-container\">\n        <div className=\"plan-column\">\n          <h2>FLK1 & FLK2</h2>\n          <div className=\"plan-card\">\n            <h3>3 Months Plan</h3>\n            <p className=\"price\">£975</p>\n            <ul>\n              <li>Access to all modes</li>\n              <li>10 mock exams</li>\n            </ul>\n            <button onClick={() => handleSubscribe('Combined', 3, 975)}>Subscribe</button>\n          </div>\n          <div className=\"plan-card\">\n            <h3>6 Months Plan</h3>\n            <p className=\"price\">£1750</p>\n            <ul>\n              <li>Access to all modes</li>\n              <li>15 mock exams</li>\n            </ul>\n            <button onClick={() => handleSubscribe('Combined', 6, 1750)}>Subscribe</button>\n          </div>\n        </div>\n\n        <div className=\"plan-column\">\n          <h2>FLK1 Plans</h2>\n          <div className=\"plan-card\">\n            <h3>3 Months Plan</h3>\n            <p className=\"price\">£635</p>\n            <ul>\n              <li>Access to all FLK1 modes</li>\n              <li>5 FLK1 mock exams</li>\n            </ul>\n            <button onClick={() => handleSubscribe('FLK1', 3, 635)}>Subscribe</button>\n          </div>\n          <div className=\"plan-card\">\n            <h3>6 Months Plan</h3>\n            <p className=\"price\">£1150</p>\n            <ul>\n              <li>Access to all FLK1 modes</li>\n              <li>10 FLK1 mock exams</li>\n            </ul>\n            <button onClick={() => handleSubscribe('FLK1', 6, 1150)}>Subscribe</button>\n          </div>\n        </div>\n\n        <div className=\"plan-column\">\n          <h2>FLK2 Plans</h2>\n          <div className=\"plan-card\">\n            <h3>3 Months Plan</h3>\n            <p className=\"price\">£635</p>\n            <ul>\n              <li>Access to all FLK2 modes</li>\n              <li>5 FLK2 mock exams</li>\n            </ul>\n            <button onClick={() => handleSubscribe('FLK2', 3, 635)}>Subscribe</button>\n          </div>\n          <div className=\"plan-card\">\n            <h3>6 Months Plan</h3>\n            <p className=\"price\">£1150</p>\n            <ul>\n              <li>Access to all FLK2 modes</li>\n              <li>10 FLK2 mock exams</li>\n            </ul>\n            <button onClick={() => handleSubscribe('FLK2', 6, 1150)}>Subscribe</button>\n          </div>\n        </div>\n\n        <div className=\"plan-column\">\n          <h2>Mock Exam Packages</h2>\n          <div className=\"plan-card mock-package\">\n            <h3>Single Mock Exam</h3>\n            <p className=\"price\">£45</p>\n            <button onClick={() => handleMockPurchase(1, 45)}>Purchase</button>\n          </div>\n          <div className=\"plan-card mock-package\">\n            <h3>5 Mock Exams</h3>\n            <p className=\"price\">£220</p>\n            <button onClick={() => handleMockPurchase(5, 220)}>Purchase</button>\n          </div>\n          <div className=\"plan-card mock-package\">\n            <h3>10 Mock Exams</h3>\n            <p className=\"price\">£400</p>\n            <button onClick={() => handleMockPurchase(10, 400)}>Purchase</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Subscriptions;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport PaymentPage from './pages/PaymentPage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutUs from './pages/AboutUs';\nimport Products from './pages/Products';\nimport RevisionMode from './pages/RevisionMode';\nimport PracticeMode from './pages/PracticeMode';\nimport ExamMode from './pages/ExamMode';\nimport ContactUs from './pages/ContactUs';\nimport MyProfile from './pages/MyProfile';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport SubscriptionsPage from './pages/SubscriptionsPage';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route path=\"/payment\" element={<PaymentPage />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/about\" element={<AboutUs />} />\n          <Route path=\"/products\" element={<Products />} />\n          <Route path=\"/revision\" element={<RevisionMode />} />\n          <Route path=\"/practice\" element={<PracticeMode />} /> \n          <Route path=\"/exam\" element={<ExamMode />} />\n          <Route path=\"/contact\" element={<ContactUs />} />\n          <Route path=\"/profile\" element={<MyProfile />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/signup\" element={<SignupPage />} />\n          <Route path=\"/subscriptions\" element={<SubscriptionsPage />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}